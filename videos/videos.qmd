---
title: "Student Exposition Submissions"
format:
  html:
    css: table-modern.css
---

```{=html}
<div class="exposition-container">
  <div class="exposition-header">
    <h1>Exposition Assignment Showcase</h1>
    <p>129 teams • 387 students • Explore the creativity and technical skills of our students</p>
  </div>

  <div class="search-filter">
    <input type="text" class="search-input" placeholder="Search by team ID, topic, or member name..." id="searchInput">
  </div>

  <div class="table-wrapper">
    <table class="submissions-table" id="submissionsTable">
      <thead>
        <tr>
          <th class="col-team">Team</th>
          <th class="col-topic">Topic</th>
          <th class="col-members">Members</th>
          <th class="col-actions">Links</th>
        </tr>
      </thead>
      <tbody>
```

```{python}
#| echo: false
import pandas as pd
df = pd.read_csv("./exposition_assignment.csv")

df = df[["Team ID", "Member 1 Name", "Member 1 Roll no", "Member 2 Name", "Member 2 Roll No", "Member 3 Name", "Member 3 Roll No", "Topic", "Link", "GithubRepo", "GithubWebsite", "YouTubeLink"]]

df['Topic'] = df['Topic'].fillna("Topic Not Provided")

from IPython.display import HTML
html = ""

for index, row in df.iterrows():
    member3_roll = int(row['Member 3 Roll No']) if pd.notna(row['Member 3 Roll No']) and row['Member 3 Roll No'] != "NA" else "NA"
    
    # Handle special case for J085
    if row['Team ID'] == "J085":
        topic_content = f'<a href="https://fastapi.tiangolo.com" target="_blank" class="topic-link">FastAPI</a> + <a href="https://htmx.org" target="_blank" class="topic-link">HTMX</a>'
        search_topic = "FastAPI HTMX"
    else:
        topic_content = f'<a href="{row["Link"]}" target="_blank" class="topic-link">{row["Topic"]}</a>' if pd.notna(row['Link']) and row['Link'].strip() != "" else row['Topic']
        search_topic = row['Topic']
    
    # Build members string
    members = f"{row['Member 1 Name']} ({row['Member 1 Roll no']}), {row['Member 2 Name']} ({row['Member 2 Roll No']}), {row['Member 3 Name']} ({member3_roll})"
    
    # Build action buttons
    buttons = f'<a href="{row["YouTubeLink"]}" target="_blank" class="btn btn-video">Video</a>'
    
    if pd.notna(row['GithubWebsite']) and row['GithubWebsite'].strip() != "":
        buttons += f' <a href="{row["GithubWebsite"]}" target="_blank" class="btn btn-blog">Blog</a>'
    
    if pd.notna(row['GithubRepo']) and row['GithubRepo'].strip() != "":
        buttons += f' <a href="{row["GithubRepo"]}" target="_blank" class="btn btn-github">GitHub</a>'
    
    html += f'''
        <tr class="submission-row" data-team="{row['Team ID']}" data-topic="{search_topic}" data-members="{row['Member 1 Name']} {row['Member 2 Name']} {row['Member 3 Name']}">
          <td class="team-cell">
            <span class="team-id">{row['Team ID']}</span>
          </td>
          <td class="topic-cell">
            <div class="topic-content">{topic_content}</div>
          </td>
          <td class="members-cell">
            <div class="members-content">{members}</div>
          </td>
          <td class="actions-cell">
            <div class="action-buttons">{buttons}</div>
          </td>
        </tr>
    '''

HTML(html)
```

```{=html}
      </tbody>
    </table>
  </div>
</div>

<script>
// Search functionality
document.getElementById('searchInput').addEventListener('input', function(e) {
    const searchTerm = e.target.value.toLowerCase();
    const rows = document.querySelectorAll('.submission-row');
    
    rows.forEach(row => {
        const teamId = row.dataset.team.toLowerCase();
        const topic = row.dataset.topic.toLowerCase();
        const members = row.dataset.members.toLowerCase();
        
        const isVisible = teamId.includes(searchTerm) || 
                         topic.includes(searchTerm) || 
                         members.includes(searchTerm);
        
        row.style.display = isVisible ? '' : 'none';
    });
});
</script>
```